{"version":3,"sources":["stores/eth/index.ts","stores/eth/eth-store.ts","components/navbar/index.tsx","components/layout/index.tsx","logo.svg","components/market-item/index.tsx","enums/operation-state.ts","stores/market/index.ts","stores/market/market-store.ts","pages/market-place/index.tsx","routes/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ehtStores","ethStore","address","balance","token","setAdress","addres","setBalance","setToken","makeAutoObservable","this","toNumber","Math","pow","useEthStores","useStyles","makeStyles","theme","link","color","margin","spacing","marginLeft","fontWeight","iconConrainer","display","alignItems","justifyContent","height","width","borderRadius","border","icon","menuItems","path","label","Navbar","classes","push","useHistory","AppBar","position","Toolbar","map","item","Link","variant","className","onClick","Grid","container","direction","Typography","balanceNumber","src","alt","MarketPlacePage","props","CssBaseline","children","memo","Alert","elevation","card","flexDirection","cardMedia","paddingTop","cardContent","flexGrow","name","fontSize","popperPaper","padding","popper","zIndex","price","marginBottom","input","marginRight","mb","infoIcons","cursor","info","valuetext","value","decimalAdjust","type","exp","isNaN","NaN","toString","split","OperationState","observer","url","bid","tokenId","useState","popperVisible","setPopperVisible","popperEl","setPopperEl","inputValue","setInputValue","sliderValue","setSliderValue","inputError","setInputError","locked","setLocked","loading","setLoading","transactionStatus","setTransactionStatus","alertVisible","setAlertVisible","allocation","setAllocation","infoPopoverVisible","setInfoPopoverVisible","infoPopEl","setInfoPopEl","isBuyed","setIsBuyed","shard","setShard","shardBalance","setShardBalance","onMouseOver","e","currentTarget","onMouseOut","changedPrice","useEffect","getBalance","shardToken","a","methods","balanceOf","call","console","log","abi","ShardToken","window","web3","eth","Contract","getShard","shards","res","getTotalLocked","utils","totalLockedFor","fromWei","getAllocation","from","onSubmit","allocate","send","toWei","hash","getTransaction","transactionHash","error","trans","popId","undefined","max","xs","sm","md","Popper","open","anchorEl","placement","transition","TransitionProps","Fade","timeout","Paper","Card","CardMedia","image","logo","title","CardContent","justify","length","substr","trim","aria-describedby","InfoOutlined","href","target","TextField","size","onChange","event","expense","Slider","getAriaValueText","aria-labelledby","valueLabelDisplay","step","min","CardActions","CheckCircle","style","green","Button","disabled","CircularProgress","Snackbar","autoHideDuration","onClose","severity","Popover","id","anchorOrigin","vertical","horizontal","transformOrigin","marketStores","marketStore","itemsState","None","items","itemsContinuation","getSellOrders","addItems","Pending","params","continuation","axios","data","orders","filter","make","assetType","assetClass","newItems","forEach","find","newItem","contract","promises","getItemMetaById","meta","Promise","all","itemsWithMeta","Success","Error","itemId","getBidsByItem","useMarketStores","cardGrid","paddingBottom","fc","marginTop","scroller","overflow","button","routes","component","Container","maxWidth","next","hasMore","loader","dataLength","get","createStyles","modal","paper","backgroundColor","palette","background","boxShadow","shadows","App","modalVisible","setModalVisible","networkId","setNetworkId","loadWeb3","loadBlockChain","init","getAccounts","accounts","net","getId","Phoenix","ethereum","Web3","enable","currentProvider","alert","to","Modal","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7fa37b4.chunk.js","sourcesContent":["import EthStore from './eth-store';\n\nexport interface EthStores {\n  ethStore: EthStore;\n}\n\nconst ethStore = new EthStore();\n\nconst ehtStores = {\n  ethStore,\n};\n\nconst useEthStores = (): EthStores => ehtStores;\nexport default useEthStores;\n","import { makeAutoObservable } from \"mobx\";\nimport { toNumber } from \"lodash\";\n\nexport default class EthStore {\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  address = \"\";\n  balance = \"\";\n  token!: any;\n\n  setAdress = (addres: string) => {\n    this.address = addres;\n  };\n\n  setBalance = (balance: string) => {\n    this.balance = balance;\n  };\n\n  get balanceNumber() {\n    return toNumber(this.balance) / Math.pow(10, 18);\n  }\n\n  setToken = (token: any) => {\n    this.token = token;\n  }\n}\n","import React from \"react\";\nimport { AppBar, Toolbar, Link, Typography, Grid } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport useEthStores from \"../../stores/eth/index\";\n\nconst useStyles = makeStyles((theme) => ({\n  link: {\n    color: \"white\",\n    margin: theme.spacing(1, 1.5),\n  },\n  balance: {\n    marginLeft: \"auto\",\n    fontWeight: 600,\n  },\n  iconConrainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: 22,\n    width: 22,\n    marginLeft: 10,\n    borderRadius: \"50%\",\n    border: \"1px solid rgb(229, 232, 235)\",\n  },\n  icon: {\n    height: 14,\n    width: 14,\n  },\n}));\n\nconst menuItems = [\n  {\n    path: \"/market\",\n    label: \"Marketplace\",\n  },\n];\n\nconst Navbar = () => {\n  const classes = useStyles();\n  const { push } = useHistory();\n\n  const { ethStore } = useEthStores();\n\n  return (\n    <AppBar position=\"relative\">\n      <Toolbar>\n        <nav>\n          {menuItems.map((item) => (\n            <Link\n              variant=\"button\"\n              className={classes.link}\n              onClick={() => push(item.path)}\n            >\n              {item.label}\n            </Link>\n          ))}\n        </nav>\n        <Grid container direction=\"row\">\n          <Typography className={classes.balance}>\n            {ethStore.balanceNumber}\n          </Typography>\n          <div className={classes.iconConrainer}>\n            <img\n              src=\"https://storage.opensea.io/files/6f8e2979d428180222796ff4a33ab929.svg\"\n              alt=\"eth\"\n              className={classes.icon}\n            />\n          </div>\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navbar;\n","import React, { FC, memo, ReactNode } from \"react\";\nimport { CssBaseline } from \"@material-ui/core\";\n\nimport Navbar from \"../../components/navbar\";\nimport Footer from '../footer/index';\n\ninterface Props {\n  children?: ReactNode;\n}\n\nconst MarketPlacePage: FC<Props> = (props) => {\n  return (\n    <>\n      <CssBaseline />\n      <Navbar />\n      <main>{props.children}</main>\n    </>\n  );\n};\n\nexport default memo(MarketPlacePage);\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { FC, useState, useEffect } from \"react\";\nimport {\n  Grid,\n  Card,\n  CardMedia,\n  CardContent,\n  Typography,\n  CardActions,\n  Button,\n  Slider,\n  TextField,\n  Popper,\n  Fade,\n  Paper,\n  Snackbar,\n  CircularProgress,\n  Popover,\n  Link,\n} from \"@material-ui/core\";\nimport MuiAlert, { AlertProps } from \"@material-ui/lab/Alert\";\nimport { CheckCircle, InfoOutlined } from \"@material-ui/icons\";\nimport { toNumber } from \"lodash\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport { observer } from \"mobx-react\";\n\nimport useEthStores from \"../../stores/eth/index\";\nimport logo from \"../../logo.svg\";\n\nimport ShardToken from \"../../abi/ShardToken.json\";\n\nfunction Alert(props: AlertProps) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\", // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  name: {\n    fontSize: theme.spacing(2),\n    fontWeight: 600,\n  },\n  popperPaper: {\n    padding: theme.spacing(2),\n  },\n  popper: {\n    zIndex: 10000,\n  },\n  price: {\n    fontWeight: 600,\n    fontSize: theme.spacing(2),\n    marginBottom: theme.spacing(1.2),\n  },\n  input: {\n    marginBottom: theme.spacing(1),\n    width: \"100%\",\n  },\n  iconConrainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: 22,\n    width: 22,\n    marginRight: 5,\n    borderRadius: \"50%\",\n    border: \"1px solid rgb(229, 232, 235)\",\n  },\n  icon: {\n    height: 14,\n    width: 14,\n  },\n  mb: {\n    marginBottom: theme.spacing(1.2),\n  },\n  infoIcons: {\n    marginBottom: theme.spacing(1.5),\n    cursor: \"pointer\",\n  },\n  info: {\n    padding: theme.spacing(2),\n  },\n}));\n\nconst valuetext = (value: number) => {\n  return `${value}°C`;\n};\n\nfunction decimalAdjust(type: \"round\" | \"floor\", value: any, exp: any) {\n  // Если степень не определена, либо равна нулю...\n  if (typeof exp === \"undefined\" || +exp === 0) {\n    return Math[type](value);\n  }\n  value = +value;\n  exp = +exp;\n  // Если значение не является числом, либо степень не является целым числом...\n  if (isNaN(value) || !(typeof exp === \"number\" && exp % 1 === 0)) {\n    return NaN;\n  }\n  // Сдвиг разрядов\n  value = value.toString().split(\"e\");\n  value = Math[type](+(value[0] + \"e\" + (value[1] ? +value[1] - exp : -exp)));\n  // Обратный сдвиг\n  value = value.toString().split(\"e\");\n  return +(value[0] + \"e\" + (value[1] ? +value[1] + exp : exp));\n}\n\nexport interface Props {\n  name: string;\n  url: string;\n  price: string;\n  bid: any;\n  address: string;\n  tokenId: string;\n}\n\nconst MarketItem: FC<Props> = ({ name, url, price, bid, address, tokenId }) => {\n  const classes = useStyles();\n\n  const [popperVisible, setPopperVisible] = useState(false);\n  const [popperEl, setPopperEl] = useState<HTMLSpanElement | null>(null);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [sliderValue, setSliderValue] = useState(0);\n  const [inputError, setInputError] = useState(false);\n  const [locked, setLocked] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [transactionStatus, setTransactionStatus] = useState(\"\");\n  const [alertVisible, setAlertVisible] = useState(false);\n  const [allocation, setAllocation] = useState<any>(null);\n  const [infoPopoverVisible, setInfoPopoverVisible] = useState(false);\n  const [infoPopEl, setInfoPopEl] = useState<HTMLSpanElement | null>(null);\n  const [isBuyed, setIsBuyed] = useState(false);\n  const [shard, setShard] = useState(\"\");\n  const [shardBalance, setShardBalance] = useState(0);\n\n  const onMouseOver = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n    setPopperEl(e.currentTarget);\n    setPopperVisible(true);\n  };\n\n  const onMouseOut = () => {\n    setPopperVisible(false);\n  };\n\n  const onInfoMouseOver = (\n    e: React.MouseEvent<HTMLSpanElement, MouseEvent>\n  ) => {\n    setInfoPopEl(e.currentTarget);\n    setInfoPopoverVisible(true);\n  };\n\n  const { ethStore } = useEthStores();\n\n  const changedPrice = toNumber(price) / Math.pow(10, 18);\n\n  useEffect(() => {\n    const getBalance = async (shardToken: any) => {\n      const balance = await shardToken.methods\n        .balanceOf(ethStore.address)\n        .call();\n      setShardBalance(balance);\n      console.log(balance, \"balance\");\n    };\n\n    if (shard) {\n      const abi = ShardToken.abi;\n      // @ts-ignore\n      const shardToken = new window.web3.eth.Contract(abi, shard);\n      if (shardToken) {\n        getBalance(shardToken);\n      }\n    }\n  }, [shard]);\n\n  const getShard = async () => {\n    try {\n      const res = await ethStore.token.methods.shards(address, tokenId).call();\n      if (res !== \"0x0000000000000000000000000000000000000000\") {\n        setIsBuyed(true);\n        setShard(res);\n      }\n    } catch (error) {}\n  };\n\n  useEffect(() => {\n    setInputError(\n      isNaN(toNumber(inputValue)) ||\n        toNumber(inputValue) > changedPrice - toNumber(locked) ||\n        toNumber(inputValue) > ethStore.balanceNumber\n    );\n  }, [inputValue, ethStore.balanceNumber, locked, changedPrice]);\n\n  const getTotalLocked = async () => {\n    try {\n      const locked = window.web3.utils.fromWei(\n        (\n          await ethStore.token.methods.totalLockedFor(address, tokenId).call()\n        ).toString()\n      );\n      setLocked(locked);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getAllocation = async () => {\n    try {\n      const res = await ethStore.token.methods\n        .getAllocation(address, tokenId)\n        .call({ from: ethStore.address });\n      setAllocation(res);\n    } catch (error) {}\n  };\n\n  useEffect(() => {\n    getTotalLocked();\n    getAllocation();\n    getShard();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [address, tokenId]);\n\n  const renderName = () => {\n    if (name.length > 10) {\n      return (\n        <Typography\n          onMouseOver={onMouseOver}\n          onMouseOut={onMouseOut}\n        >{`${name.substr(0, 6).trim()}...`}</Typography>\n      );\n    } else {\n      return <Typography>{name}</Typography>;\n    }\n  };\n\n  const onSliderChange = (event: object, value: number | number[]): void => {\n    if (typeof value === \"number\") {\n      setInputValue(`${(changedPrice / 100) * value}`);\n      setSliderValue(value);\n    }\n  };\n\n  const onInputChange = (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    setInputValue(event.target.value);\n    const expense = toNumber(event.target.value);\n    if (expense <= ethStore.balanceNumber) {\n      setSliderValue(\n        decimalAdjust(\"round\", (expense / changedPrice) * 100, -2)\n      );\n    }\n  };\n\n  const onSubmit = async () => {\n    try {\n      setLoading(true);\n      const hash = await ethStore.token.methods\n        .allocate(address, tokenId, price)\n        .send({\n          from: ethStore.address,\n          value: window.web3.utils.toWei(inputValue, \"ether\"),\n        });\n\n      await window.web3.eth.getTransaction(\n        hash.transactionHash,\n        (error, trans) => {\n          setLoading(false);\n          setTransactionStatus(\"success\");\n          setAlertVisible(true);\n          getTotalLocked();\n          getAllocation();\n          getShard();\n        }\n      );\n    } catch (error) {\n      setLoading(false);\n      setTransactionStatus(\"error\");\n      setAlertVisible(true);\n      console.log(error);\n    }\n  };\n\n  const popId = infoPopoverVisible ? \"simple-popover\" : undefined;\n\n  const max = decimalAdjust(\n    \"round\",\n    ((changedPrice - toNumber(locked)) / changedPrice) * 100,\n    -2\n  );\n\n  return (\n    <Grid item xs={12} sm={6} md={4}>\n      <Popper\n        open={popperVisible}\n        anchorEl={popperEl}\n        placement=\"bottom\"\n        transition\n        className={classes.popper}\n      >\n        {({ TransitionProps }) => (\n          <Fade {...TransitionProps} timeout={350}>\n            <Paper className={classes.popperPaper}>{name}</Paper>\n          </Fade>\n        )}\n      </Popper>\n      <Card className={classes.card}>\n        <CardMedia\n          className={classes.cardMedia}\n          image={url || logo}\n          title=\"Image title\"\n        />\n        <CardContent className={classes.cardContent}>\n          <Grid container direction=\"row\" justify=\"space-between\">\n            <Grid item>\n              <Typography className={classes.name}>{renderName()}</Typography>\n            </Grid>\n            <Grid item>\n              <Grid container direction=\"row\">\n                <div className={classes.iconConrainer}>\n                  <img\n                    src=\"https://storage.opensea.io/files/6f8e2979d428180222796ff4a33ab929.svg\"\n                    alt=\"eth\"\n                    className={classes.icon}\n                  />\n                </div>\n\n                <Typography className={classes.price}>\n                  {`${changedPrice} ETH`}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n          {!isBuyed && (\n            <Grid container direction=\"row\" justify=\"space-between\">\n              <Typography className={classes.mb}>Собрано:</Typography>\n              <Typography className={classes.price}>{locked}</Typography>\n            </Grid>\n          )}\n          {toNumber(locked) > 0 && allocation && allocation[0] !== \"0\" && (\n            <span aria-describedby={popId} onClick={onInfoMouseOver}>\n              <InfoOutlined className={classes.infoIcons} color=\"primary\" />\n            </span>\n          )}\n          {isBuyed && (\n            <Grid container direction=\"row\" justify=\"space-between\">\n              <Typography className={classes.mb}>\n                <Link\n                  href={`https://rinkeby.etherscan.io/token/${shard}`}\n                  target=\"_blank\"\n                >\n                  ShardToken\n                </Link>\n              </Typography>\n              <Typography className={classes.price}>{toNumber(shardBalance) / Math.pow(10, 18)}</Typography>\n            </Grid>\n          )}\n          {!isBuyed && ethStore.balanceNumber ? (\n            <>\n              <TextField\n                label=\"ETH\"\n                variant=\"outlined\"\n                className={classes.input}\n                size=\"small\"\n                value={inputValue}\n                onChange={onInputChange}\n                error={inputError}\n              />\n              <Grid container spacing={2}>\n                <Grid item>0%</Grid>\n                <Grid item xs>\n                  <Slider\n                    onChange={onSliderChange}\n                    getAriaValueText={valuetext}\n                    aria-labelledby=\"discrete-slider\"\n                    valueLabelDisplay=\"auto\"\n                    step={1}\n                    min={0}\n                    max={max}\n                    value={sliderValue}\n                  />\n                </Grid>\n                <Grid item>{max}%</Grid>\n              </Grid>\n            </>\n          ) : null}\n        </CardContent>\n        {ethStore.balanceNumber ? (\n          <CardActions>\n            {!isBuyed ? (\n              <Button\n                size=\"small\"\n                color=\"primary\"\n                disabled={inputError}\n                onClick={onSubmit}\n              >\n                {loading ? <CircularProgress /> : \"Вложить\"}\n              </Button>\n            ) : (\n              <CheckCircle style={{ color: green[500] }} />\n            )}\n          </CardActions>\n        ) : null}\n      </Card>\n      <Snackbar\n        open={alertVisible}\n        autoHideDuration={6000}\n        onClose={() => setAlertVisible(false)}\n      >\n        {transactionStatus === \"success\" ? (\n          <Alert onClose={() => setAlertVisible(false)} severity=\"success\">\n            Транзакция прошла успешно\n          </Alert>\n        ) : (\n          <Alert severity=\"error\">Что-то пошло не так!</Alert>\n        )}\n      </Snackbar>\n      <Popover\n        id={popId}\n        open={infoPopoverVisible}\n        anchorEl={infoPopEl}\n        onClose={() => setInfoPopoverVisible(false)}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n      >\n        {allocation && allocation[0] !== \"0\" && (\n          <Paper className={classes.info}>\n            <Grid container direction=\"row\" justify=\"space-between\">\n              <Typography className={classes.mb}>Вы внесли:</Typography>\n              <Typography className={classes.price}>\n                {allocation[0] / Math.pow(10, 18)}\n              </Typography>\n            </Grid>\n            <Grid container direction=\"row\" justify=\"space-between\">\n              <Typography className={classes.mb}>Вы владеете:</Typography>\n              <Typography className={classes.price}>\n                {(allocation[0] / toNumber(price)) * 100}%\n              </Typography>\n            </Grid>\n          </Paper>\n        )}\n      </Popover>\n    </Grid>\n  );\n};\n\nexport default observer(MarketItem);\n","export enum OperationState {\n  None = 'none',\n  Success = 'success',\n  Pending = 'pending',\n  Error = 'error',\n}","import MarketStore from './market-store';\n\nexport interface MarketStores {\n  marketStore: MarketStore;\n}\n\nconst marketStore = new MarketStore();\n\nconst marketStores = {\n  marketStore,\n};\n\nconst useMarketStores = (): MarketStores => marketStores;\nexport default useMarketStores;\n","import axios from \"axios\";\nimport { makeAutoObservable } from \"mobx\";\n\nimport { OperationState } from \"../../enums/operation-state\";\n\ninterface allItemsParams {\n  size: number;\n  continuation?: string;\n}\n\nexport default class MarketStore {\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  itemsState = OperationState.None;\n  items: any = [];\n  itemsContinuation!: string;\n\n  getSellOrders = async (addItems?: boolean): Promise<void> => {\n    try {\n      this.itemsState = OperationState.Pending;\n\n      const size = 30;\n      const params: allItemsParams = {\n        size,\n      };\n\n      if (addItems) {\n        params.continuation = this.itemsContinuation;\n      }\n\n      const res = await axios(\n        \"https://api-staging.rarible.com/protocol/v0.1/ethereum/order/orders/sell\",\n        { params }\n      );\n\n      if (res.data) {\n        const items = res.data.orders.filter(\n          (item: any) =>\n            item.make.assetType.assetClass === \"ERC721_LAZY\" ||\n            item.make.assetType.assetClass === \"ERC721\" ||\n            item.make.assetType.assetClass === \"ERC1155_LAZY\" ||\n            item.make.assetType.assetClass === \"ERC1155\"\n        );\n\n        const newItems: any[] = [];\n        items.forEach((item: any) => {\n          if (\n            newItems.find(\n              (newItem) =>\n                item.make.assetType.contract ===\n                  newItem.make.assetType.contract &&\n                item.make.assetType.tokenId === newItem.make.assetType.tokenId\n            )\n          ) {\n            return;\n          } else {\n            newItems.push(item);\n          }\n        });\n\n        const promises = newItems.map(async (item: any) => {\n          const meta = await this.getItemMetaById(\n            `${item.make.assetType.contract}:${item.make.assetType.tokenId}`\n          );\n\n          return {\n            meta,\n            item,\n          };\n        });\n        let itemsWithMeta = await Promise.all(promises);\n\n        if (addItems) {\n          this.items = [...this.items, ...itemsWithMeta];\n        } else {\n          this.items = itemsWithMeta;\n        }\n\n        this.itemsContinuation = res.data.continuation;\n        this.itemsState = OperationState.Success;\n      }\n    } catch (error) {\n      this.itemsState = OperationState.Error;\n    }\n  };\n\n  getItemMetaById = async (itemId: string) => {\n    try {\n      const res = await axios(\n        `https://api-staging.rarible.com/protocol/v0.1/ethereum/nft/items/${itemId}/meta`\n      );\n      return res.data;\n    } catch (error) {}\n  };\n\n  getBidsByItem = async (contract: string, tokenId: string) => {\n    try {\n      const res = await axios(\n        `https://api-staging.rarible.com/protocol/v0.1/ethereum/order/orders/bids/byItem`,\n        { params: { contract, tokenId, size: 100 } }\n      );\n      return res.data;\n    } catch (error) {}\n  };\n}\n","import React, { useEffect } from \"react\";\nimport { Grid, Container, CircularProgress, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { observer } from \"mobx-react\";\nimport { get } from \"lodash\";\n\nimport Layout from \"../../components/layout\";\nimport MarketItem from \"../../components/market-item\";\nimport useMarketStores from \"../../stores/market/index\";\n\nconst useStyles = makeStyles((theme) => ({\n  cardGrid: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(8),\n  },\n  fc: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: theme.spacing(4),\n  },\n  scroller: {\n    overflow: \"hidden !important\",\n  },\n  button: {\n    marginBottom: theme.spacing(1.5),\n  },\n}));\n\nconst MarketPlacePage = () => {\n  const classes = useStyles();\n  const { marketStore } = useMarketStores();\n\n  useEffect(() => {\n    marketStore.getSellOrders();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  \n  return (\n    <Layout>\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n        <Button variant=\"outlined\" color=\"primary\" className={classes.button}>\n          Фильтры\n        </Button>\n        <InfiniteScroll\n          className={classes.scroller}\n          next={() => marketStore.getSellOrders(true)}\n          hasMore={true}\n          loader={\n            <div className={classes.fc}>\n              <CircularProgress />\n            </div>\n          }\n          dataLength={marketStore.items.length}\n        >\n          <Grid container spacing={4}>\n            {marketStore.items.map((item: any) => (\n              <MarketItem\n                key={get(item, \"item.id\")}\n                name={get(item, \"meta.name\")}\n                url={get(item, \"meta.image.url.PREVIEW\")}\n                price={get(item, \"item.take.value\")}\n                bid={item.bid}\n                address={get(item, \"item.make.assetType.contract\")}\n                tokenId={get(item, \"item.make.assetType.tokenId\")}\n              />\n            ))}\n          </Grid>\n        </InfiniteScroll>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default observer(MarketPlacePage);\n","import MarketPlacePage from \"../pages/market-place\";\n\nexport const routes = [\n  {\n    path: '/market',\n    component: MarketPlacePage,\n  }\n];","import React, { useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport { Modal } from '@material-ui/core'\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\n\nimport { routes } from \"./routes/index\";\nimport useEthStores from './stores/eth/index';\n\nimport Phoenix from './abi/Phoenix.json';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  }),\n);\n\nconst TOKEN_ADDRESS = '0x536d17Ef0600696540A560ae15af180151a09FdC';\n\nconst App = () => {\n  const classes = useStyles();\n\n  const { ethStore } = useEthStores();\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [networkId, setNetworkId] = useState(0);\n\n  useEffect(() => {\n    const init = async () => {\n      await loadWeb3();\n      await loadBlockChain();\n    };\n\n    init();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const loadBlockChain = async () => {\n    const web3 = window.web3;\n\n    const accounts = await web3.eth.getAccounts();\n    const networkId = await web3.eth.net.getId();\n    const balance = await web3.eth.getBalance(accounts[0]);\n    \n    ethStore.setAdress(accounts[0]);\n    ethStore.setBalance(balance);\n\n    setNetworkId(networkId);\n\n    if (networkId !== 4) {\n      setModalVisible(true);\n    }\n    const abi = Phoenix.abi;\n    // @ts-ignore\n    if (abi) {\n      // @ts-ignore\n      const token = new web3.eth.Contract(abi, TOKEN_ADDRESS);\n      console.log(token, 'tok')\n      ethStore.setToken(token);\n    }\n  };\n\n  const loadWeb3 = async () => {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      alert(\"error\");\n    }\n  };\n\n  const networkModalClose = () => {\n    if (networkId === 4) {\n      setModalVisible(false);\n    }\n  };\n\n  return (\n    <>\n      <BrowserRouter>\n        <Switch>\n          {routes.map((item) => (\n            <Route path={item.path} component={item.component} />\n          ))}\n          <Redirect to=\"/market\" />\n        </Switch>\n        <Modal\n          open={modalVisible}\n          onClose={networkModalClose}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          className={classes.modal}\n        >\n          <div className={classes.paper}>\n            <h2 id=\"transition-modal-title\">Ошибка</h2>\n            <p id=\"transition-modal-description\">Переключите сеть.</p>\n          </div>\n        </Modal>\n      </BrowserRouter>\n    </>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}